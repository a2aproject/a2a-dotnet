@host = http://localhost:5048

### Query agent card for the echo agent
GET {{host}}/echo/.well-known/agent.json

## curl -N -X GET http://localhost:5048/echo/.well-known/agent.json

### Send a message to the echo agent
POST {{host}}/echo
Content-Type: application/json

{
    "id": "3",
    "jsonrpc": "2.0",
    "method": "message/send",
    "params": {
          "message": {
            "messageId": "12345",
            "role": "user",
            "parts": [
                {
                    "kind": "text",
                    "text": "Hello, world!"
                }
            ]
        }
    }
}

### Send a message to the echo agent that uses tasks
POST {{host}}/echotasks
Content-Type: application/json

{
    "id": "3",
    "jsonrpc": "2.0",
    "method": "message/send",
    "params": {
          "message": {
            "messageId": "12345",
            "role": "user",
            "parts": [
                {
                    "kind": "text",
                    "text": "Hello, world!"
                }
            ]
        }
    }
}



## curl -N -X POST http://localhost:5048/echo -H "Content-Type: application/json" -d '{ "id": "3","jsonrpc": "2.0","method": "task/sendsubscribe","params": {"id": "1234","message": {"role": "user","parts": [{"type": "text","text": "Hello, world!"}]}}}'

###
POST {{host}}/echotasks
Content-Type: application/json

{
    "id": "3",
    "jsonrpc": "2.0",
    "method": "task/get",
    "params": {
        "id": "1e46e6c3-29d2-4228-9d31-20e5f32059f2"
        }
}

### SendSubscribe the echo agent
POST {{host}}/echo
Content-Type: application/json

{
    "id": "3",
    "jsonrpc": "2.0",
    "method": "message/stream",
    "params": {
        "message": {
            "messageId": "messageId2",
            "role": "user",
            "parts": [
                {
                    "kind": "text",
                    "text": "Hello, world!"
                }
            ]
        }
    }
}

### SendSubscribe the echo agent with tasks
POST {{host}}/echotasks
Content-Type: application/json

{
    "id": "3",
    "jsonrpc": "2.0",
    "method": "message/stream",
    "params": {
        "message": {
            "messageId": "messageId2",
            "role": "user",
            "parts": [
                {
                    "kind": "text",
                    "text": "Hello, world!"
                }
            ]
        }
    }
}

### Send a task to the echo agent
POST {{host}}/hostedclient
Content-Type: application/json

{
    "id": "3",
    "jsonrpc": "2.0",
    "method": "message/send",
    "params": {
        "message": {
            "messageId": "1234",
            "role": "user",
            "parts": [
                {
                    "kind": "text",
                    "text": "Hello, world!"
                }
            ]
        }
    }
}

###
POST {{host}}/hostedclient
Content-Type: application/json

{
    "id": "3",
    "jsonrpc": "2.0",
    "method": "task/get",
    "params": {
        "id": "1234"
        }
}



###  Create a new task for the researcher agent
POST {{host}}/researcher
Accept: application/json
Content-Type: application/json

{
    "id": "1",
    "jsonrpc": "2.0",
    "method": "task/send",
    "params": {
        "id": "asdasdasd",
        "message": {
            "role": "user",
            "parts": [
                {
                    "kind": "text",
                    "text": "Research the current price of butter"
                }
            ]
        }
    }
}

###  Retrieve a task

POST {{host}}/researcher
Accept: application/json
Content-Type: application/json

{
    "id": "2",
    "jsonrpc": "2.0",
    "method": "task/get",
    "params": {
        "id": "asdasdasd"
    }
}

###  Create a new task for the researcher agent
POST {{host}}/researcher
Accept: application/json
Content-Type: application/json

{
    "id": "1",
    "jsonrpc": "2.0",
    "method": "task/send",
    "params": {
        "id": "asdasdasd",
        "message": {
            "role": "user",
            "parts": [
                {
                    "kind": "text",
                    "text": "go ahead"
                }
            ]
        }
    }
}
